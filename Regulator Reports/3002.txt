OLD*****
let
    Source = Folder.Files("C:\Desktop\schemes"),
    #"Filtered Hidden Files1" = Table.SelectRows(Source, each [Attributes]?[Hidden]? <> true),
    #"Invoke Custom Function1" = Table.AddColumn(#"Filtered Hidden Files1", "Transform File", each #"Transform File"([Content])),
    #"Renamed Columns1" = Table.RenameColumns(#"Invoke Custom Function1", {"Name", "Source.Name"}),
    #"Removed Other Columns1" = Table.SelectColumns(#"Renamed Columns1", {"Source.Name", "Transform File"}),
    #"Expanded Table Column1" = Table.ExpandTableColumn(#"Removed Other Columns1", "Transform File", Table.ColumnNames(#"Transform File"(#"Sample File"))),
    #"Changed Type" = Table.TransformColumnTypes(#"Expanded Table Column1",{{"Source.Name", type text}, {"Txn Id", type text}, {"Description", type text}, {"Principal", type number}, {"Purchase Cost", type number}, {"Interst Rate", type number}, {"Settlement Date", type date}, {"Fund Manager", Int64.Type}, {"ACC", type number}, {"Market Value", type number}, {"SEPERATOR", type text}, {"CONSIDERATION", type number}, {"Sec Price", type number}, {"GAIN", Int64.Type}, {"MAT.DATE", type text}, {"Accrue.Amt", type number}, {"BUY.SELL", type text}, {"ISSUER", type any}, {"COUNTT", Int64.Type}}),
    #"BONDS Tweak" = Table.AddColumn(#"Changed Type", "Separator", each if [SEPERATOR] = "BONDS" then "Government Notes & Bonds" else [SEPERATOR]),
    #"Split Column by Delimiter" = Table.SplitColumn(#"BONDS Tweak", "Source.Name", Splitter.SplitTextByEachDelimiter({"-"}, QuoteStyle.Csv, true), {"Source.Name.1", "Source.Name.2"}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Split Column by Delimiter",{{"Source.Name.1", type text}, {"Source.Name.2", type text}}),
    #"Removed Columns" = Table.RemoveColumns(#"Changed Type1",{"Source.Name.2"}),
    #"Renamed Columns" = Table.RenameColumns(#"Removed Columns",{{"Source.Name.1", "Scheme"}}),
    #"Replaced Value" = Table.ReplaceValue(#"Renamed Columns","PATF","PENSIONS ALLIANCE TRUST FUND",Replacer.ReplaceText,{"Scheme"}),
    #"Inserted Date" = Table.AddColumn(#"Replaced Value", "Date", each Date.From(Text.From([GAIN], "en-GB")), type date),
    #"Renamed Columns3" = Table.RenameColumns(#"Inserted Date",{{"Date", "Maturity Date"}, {"Accrue.Amt", "Accrued Interest (since purchase) / Coupons (since last payment date)"}}),
    #"Filtered Rows" = Table.SelectRows(#"Renamed Columns3", each true),
    #"Removed Columns1" = Table.RemoveColumns(#"Filtered Rows",{"COUNTT"}),
    #"Asset Class" = Table.RenameColumns(#"Removed Columns1",{{"Separator", "Asset Class"}}),
    #"Filtering Cash and Receivables" = Table.SelectRows(#"Asset Class", each [Asset Class] <> "CASH" and [Asset Class] <> "RECIEVABLES"),
    #"Asset Tenure" = Table.AddColumn(#"Filtering Cash and Receivables", "Asset Tenure", each Duration.Days([Maturity Date] - [Settlement Date])),
    #"Changed Type3" = Table.TransformColumnTypes(#"Asset Tenure",{{"Asset Tenure", Int64.Type}}),
    #"Split Column by Delimiter1" = Table.SplitColumn(#"Changed Type3", "MAT.DATE", Splitter.SplitTextByDelimiter("'", QuoteStyle.Csv), {"MAT.DATE.1", "MAT.DATE.2", "MAT.DATE.3"}),
    #"Changed Type4" = Table.TransformColumnTypes(#"Split Column by Delimiter1",{{"MAT.DATE.1", type number}, {"MAT.DATE.2", type number}, {"MAT.DATE.3", type text}}),
    #"Merged Columns1" = Table.CombineColumns(Table.TransformColumnTypes(#"Changed Type4", {{"MAT.DATE.1", type text}, {"MAT.DATE.2", type text}}, "en-GB"),{"MAT.DATE.1", "MAT.DATE.2", "MAT.DATE.3"},Combiner.CombineTextByDelimiter("", QuoteStyle.None),"Capital Gains"),
    #"Changed Type5" = Table.TransformColumnTypes(#"Merged Columns1",{{"Capital Gains", type number}}),
    #"Replaced Value1" = Table.ReplaceValue(#"Changed Type5","Stocks","Equities",Replacer.ReplaceText,{"Asset Class"}),
    #"Number of Units / Shares" = Table.AddColumn(#"Replaced Value1", "Number of Units / Shares", each if [Asset Class] = "Equities" then [Principal] else null),
    #"Price Per Unit / Share at Purchase" = Table.AddColumn(#"Number of Units / Shares", "Price Per Unit / Share at Purchase", each if [Asset Class] = "Equities" then [Purchase Cost] else null),
    #"Changed Type6" = Table.TransformColumnTypes(#"Price Per Unit / Share at Purchase",{{"Price Per Unit / Share at Purchase", type number}}),
    #"Price Per Unit / Share at Value Date" = Table.RenameColumns(#"Changed Type6",{{"Sec Price", "Price Per Unit / Share at Value Date"}}),
    #"Face Value(GHS)" = Table.AddColumn(#"Price Per Unit / Share at Value Date", "Face Value(GHS)", each if [Asset Class] = "Government Notes & Bonds" then [Principal] else if [Asset Class] = "Local Govt. & Statutory Agency Securities" then [Principal] else if [Asset Class] = "Treasury Bills" then [Principal] else if [Asset Class] = "Corporate Notes & Bonds" then [Principal] else if [Asset Class] = "Fixed Deposit" then [Principal] else null),
    #"Currency" = Table.AddColumn(#"Face Value(GHS)", "Currency", each if Text.Contains([Description], "EUROBOND") then "USD" else if Text.Contains([Description], "VC FUND") then "USD" else if Text.Contains([Description], "PAYINC") then "USD" else if Text.Contains([Description], "IC AFRICA FIXED INCOME FUND ") then "USD" else "GHS"),
    #"Removed Columns2" = Table.RemoveColumns(#"Currency",{"BUY.SELL"}),
    #"Instrument" = Table.AddColumn(#"Removed Columns2", "Instrument", each if Text.Contains([Description], "TREASURY BOND") then "TREASURY BONDS - %" else if [Asset Class] = "Treasury Bills" then "TREASURY BILLS -%" else if Text.Contains([Description], "ESLA BOND") then "STATUTORY AGENCY BOND -%" else if Text.Contains([Description], "TREASURY NOTE") then "TREASURY NOTES - %" else if Text.Contains([Description], "COCOA BILL") then "COCOA BILL -%" else if [Asset Class] = "Corporate Notes & Bonds" then "CORPORATE BONDS -% " else if Text.Contains([Description], "FIXED DEPOSIT WITHABSA Bank Gh Ltd") then "NEGOTIABLE CERTIFICATES OF DEPOSITS -%" else if Text.Contains([Description], "FIXED DEPOSIT WITHFidelity Bank Ghana Ltd") then "NEGOTIABLE CERTIFICATES OF DEPOSITS -%" else if [Asset Class] = "Fixed Deposit" then "FIXED DEPOSIT -%" else if [Description] = "GLD" then "EXCHANGE TRADED FUND -%" else if [Asset Class] = "Equities" then "ORDINARY SHARES -%" else if Text.Contains([Description], "REIT") then "REAL ESTATE INVESTMENT TRUSTS (REITS) -%" else if Text.Contains([Description], "VC FUND") then "PRIVATE EQUITY FUNDS -%" else if [Asset Class] = "Collective Investment" then "MUTUAL FUND -%" else if Text.Contains([Description], "PAYINC PREF SHARES") then "REDEEMABLE CUMMULATIVE PREFERENCE SHARES -%" else if Text.Contains([Description], "YEAR EUROBOND") then "TREASURY BONDS - %" else if Text.Contains([Description], "PEP SPORTS") then "CORPORATE BONDS -%" else null),
    #"Issuer Name" = Table.AddColumn(Instrument, "Issuer Name", each if Text.Contains([Description], "ESLA") then "ESLA" else if Text.Contains([Description], "COCOA") then "CMB" else if Text.Contains([Description], "TREASURY") then "GOG" else if [Asset Class] = "Equities" then [Description] else if [Asset Class] = "Collective Investment" then [Description] else if Text.Contains([Description], "QTL") then "QTL" else if Text.Contains([Description], "DAAKYE") then "DTP" else if Text.Contains([Description], "BAYPORT") then "BFS" else if Text.Contains([Description], "IZWE") then "ILL" else if Text.Contains([Description], "AFB") then "AFB" else if Text.Contains([Description], "PAYINC") then "PAYINC" else if Text.Contains([Description], "TECNOMONT") then "TECNOMONT" else if Text.Contains([Description], "PEP SPORTS") then "PEP SPORTS" else if Text.Contains([Description], "EUROBOND") then "GOG" else if Text.Contains([Description], "GOG") then "GOG" else if [Asset Class] = "Fixed Deposit" then [ISSUER] else null),
    #"Amount Invested (GHS)" = Table.AddColumn(#"Issuer Name", "Amount Invested (GHS)", each if [Asset Class] = "Fixed Deposit" then [Principal] else if [Currency] = "GHS" then [CONSIDERATION] else null),
    #"Interest Rate percent" = Table.AddColumn(#"Amount Invested (GHS)", "Interest Rate percent", each if [Asset Class] = "Fixed Deposit" then [Interst Rate] else null),
    #"Changed Type7" = Table.TransformColumnTypes(#"Interest Rate percent",{{"Interest Rate percent", type number}}),
    #"Discount Rate percent" = Table.AddColumn(#"Changed Type7", "Discount Rate percent", each if Text.Contains([Description], "BILL") then [Interst Rate] else null),
    #"Coupon Rate percent" = Table.AddColumn(#"Discount Rate percent", "Coupon Rate percent", each if Text.Contains([Description], "BOND") then [Interst Rate] else if Text.Contains([Description], "NOTE") then [Interst Rate] else null),
    #"Amount Invested in Foreign Currency (Eurobond / External Investment)" = Table.AddColumn(#"Coupon Rate percent" , "Amount Invested in Foreign Currency (Eurobond / External Investment)", each if [Currency] = "USD" then [CONSIDERATION] else null),
    #"Changed Type8" = Table.TransformColumnTypes(#"Amount Invested in Foreign Currency (Eurobond / External Investment)",{{"Amount Invested in Foreign Currency (Eurobond / External Investment)", Currency.Type}}),
    #"Issue Date" = Table.AddColumn(#"Changed Type8", "Issue Date", each Date.AddDays([Maturity Date],-[Asset Tenure])),
    #"Replaced Errors" = Table.ReplaceErrorValues(#"Issue Date", {{"Issue Date", null}}),
    #"Changed Type2" = Table.TransformColumnTypes(#"Replaced Errors",{{"Issue Date", type date}}),
    #"Renamed Columns6" = Table.RenameColumns(#"Changed Type2",{{"Market Value", "Market Value (GHS)"}}),
    #"Changed Type9" = Table.TransformColumnTypes(#"Renamed Columns6",{{"Market Value (GHS)", Currency.Type}}),
    #"Duplicated Column" = Table.DuplicateColumn(#"Changed Type9", "Issuer Name", "Issuer Name - Copy"),
    #"Duplicated Column1" = Table.DuplicateColumn(#"Duplicated Column", "Asset Tenure", "Asset Tenure - Copy"),
    #"Merged Columns2" = Table.CombineColumns(Table.TransformColumnTypes(#"Duplicated Column1", {{"GAIN", type text}, {"Asset Tenure - Copy", type text}}, "en-GB"),{"GAIN", "Issuer Name - Copy", "Asset Tenure - Copy"},Combiner.CombineTextByDelimiter("", QuoteStyle.None),"ID"),
    #"Merged Queries" = Table.NestedJoin(#"Merged Columns2", {"ID"}, #"Active Securities", {"ID"}, "Active Securities", JoinKind.LeftOuter),
    #"Expanded Active Securities" = Table.ExpandTableColumn(#"Merged Queries", "Active Securities", {"Day Count", "I S I N", "Issue Date"}, {"Active Securities.Day Count", "Active Securities.I S I N", "Active Securities.Issue Date"}),
    #"Changed Type11" = Table.TransformColumnTypes(#"Expanded Active Securities",{{"Active Securities.Day Count", Int64.Type}}),
    #"Renamed Columns7" = Table.RenameColumns(#"Changed Type11",{{"Active Securities.I S I N", "Investment ID"}}),
    #"Reordered Columns1" = Table.ReorderColumns(#"Renamed Columns7",{"Scheme", "Txn Id", "Description", "Principal", "Purchase Cost", "Interst Rate", "Settlement Date", "Fund Manager", "ACC", "Market Value (GHS)", "Asset Class", "CONSIDERATION", "Price Per Unit / Share at Value Date", "Capital Gains", "Accrued Interest (since purchase) / Coupons (since last payment date)", "Maturity Date", "Asset Tenure", "Number of Units / Shares", "Price Per Unit / Share at Purchase", "Face Value(GHS)", "Currency", "Instrument", "Issuer Name", "Amount Invested (GHS)", "Interest Rate percent", "Discount Rate percent", "Coupon Rate percent", "Amount Invested in Foreign Currency (Eurobond / External Investment)", "Issue Date", "Investment ID", "ID", "Active Securities.Issue Date"}),
    #"Currency Conversion Rate" = Table.AddColumn(#"Reordered Columns1", "Currency Conversion Rate", each if [Currency] = "USD"  and [Asset Class] = "Corporate Notes & Bonds" or [Asset Class]= "EuroBonds" then [#"Market Value (GHS)"] / ([Principal] + [ACC]) else if [Currency] = "USD" and [Asset Class] = "Collective Investment" then [#"Market Value (GHS)"] / ([Principal] * [#"Price Per Unit / Share at Value Date"]) 
else null),
    #"Scheme Name" = Table.AddColumn(#"Currency Conversion Rate", "Joiner", each if [Scheme] = "AXIS PENSION.csv" then "AXIS PENSION PLAN" else if [Scheme] = "BEST.csv" then "BEST PROVIDENT FUND SCHEME" else if [Scheme] = "BROADVIEW.csv" then "BROADVIEW MASTER TRUST FUND" else if [Scheme] = "CEDAR PENSION.csv" then "CEDAR PENSION SCHEME" else if [Scheme] = "CEDAR PROVIDENT.csv" then "CEDAR PROVIDENT FUND" else if [Scheme] = "DAAKYE.csv" then "DAAKYE OCCUPATIONAL PENSION SCHEME" else if [Scheme] = "ENIDASO.csv" then "PENSIONS ALLIANCE ENIDASO SCHEME" else if [Scheme] = "FGR BOGOSO.csv" then "FGR BOGOSO PRESTEA OCCUPATIONAL PENSION SCHEME" else if [Scheme] = "FIESTA.csv" then "FIESTA ROYALE  OCCUPATIONAL PENSION SCHEME" else if [Scheme] = "GIMPA.csv" then "GIMPA OCCUPATIONAL PENSION SCHEME" else if [Scheme] = "GNAT.csv" then "GNAT PROVIDENT FUND SCHEME" else if [Scheme] = "GOLDEN STAR WASSA.csv" then "GOLDEN STAR (WASSA) OCCUPATIONAL PENSION SCHEME" else if [Scheme] = "KIMPTON.csv" then "KIMPTON MASTER PROVIDENT FUND SCHEME" else if [Scheme] = "LARP.csv" then "LIVE AFTER RETIREMENT" else if [Scheme] = "MERIT OPS.csv" then "FIRST MERIT OCCUPATIONAL PENSION SCHEME" else if [Scheme] = "MERIT PPS.csv" then "FIRST MERIT PERSONAL PENSION SCHEME" else if [Scheme] = "PENTRUST.csv" then "PENTRUST TIER 2 OCCUPATIONAL MASTER TRUST SCHEME" else if [Scheme] = "QFTL.csv" then "QFTL PROVIDENT FUND SCHEME" else if [Scheme] = "RBG.csv" then "REPUBLIC MASTER TRUST PROVIDENT PENSION SCHEME" else if [Scheme] = "UPMT.csv" then "UNIVERSAL PENSIONS MASTER TRUST SCHEME" else if [Scheme] = "UPT PENSION.csv" then "UPT PENSION SCHEME" else if [Scheme] = "PENSIONS ALLIANCE TRUST FUND" then "PENSIONS ALLIANCE TRUST FUND" else null),
    #"Merged Queries1" = Table.NestedJoin(#"Scheme Name", {"Joiner"}, zenith_schemes, {"EntityName"}, "zenith_schemes", JoinKind.LeftOuter),
    #"Expanded zenith_schemes" = Table.ExpandTableColumn(#"Merged Queries1", "zenith_schemes", {"Entity_ID"}, {"zenith_schemes.Entity_ID"}),
    #"Reordered Columns2" = Table.ReorderColumns(#"Expanded zenith_schemes",{"Scheme", "Txn Id", "Description", "Principal", "Purchase Cost", "Interst Rate", "Settlement Date", "Fund Manager", "CONSIDERATION", "ACC", "Investment ID", "Instrument", "Issuer Name", "Asset Tenure", "Amount Invested (GHS)", "Accrued Interest (since purchase) / Coupons (since last payment date)", "Face Value(GHS)", "Interest Rate percent", "Discount Rate percent", "Coupon Rate percent", "Issue Date", "Price Per Unit / Share at Purchase", "Price Per Unit / Share at Value Date", "Capital Gains", "Number of Units / Shares", "Currency Conversion Rate", "Currency", "Amount Invested in Foreign Currency (Eurobond / External Investment)", "Market Value (GHS)", "Asset Class", "Maturity Date", "ID", "Active Securities.Issue Date", "Joiner", "zenith_schemes.Entity_ID"}),
    #"Renamed Columns8" = Table.RenameColumns(#"Reordered Columns2",{{"zenith_schemes.Entity_ID", "Entity_ID"}, {"Joiner", "EntityName"}}),
    #"Reordered Columns3" = Table.ReorderColumns(#"Renamed Columns8",{"Scheme", "Txn Id", "Description", "Principal", "Purchase Cost", "Interst Rate", "Fund Manager", "CONSIDERATION", "ACC", "EntityName", "Entity_ID", "Investment ID", "Instrument", "Issuer Name", "Asset Tenure", "Settlement Date", "Amount Invested (GHS)", "Accrued Interest (since purchase) / Coupons (since last payment date)", "Face Value(GHS)", "Interest Rate percent", "Discount Rate percent", "Coupon Rate percent", "Issue Date", "Price Per Unit / Share at Purchase", "Price Per Unit / Share at Value Date", "Capital Gains", "Number of Units / Shares", "Currency Conversion Rate", "Currency", "Amount Invested in Foreign Currency (Eurobond / External Investment)", "Market Value (GHS)", "Asset Class", "Maturity Date", "ID", "Active Securities.Issue Date"}),
    #"Renamed Columns9" = Table.RenameColumns(#"Reordered Columns3",{{"Settlement Date", "Date of Investment"}}),
    #"Changed Type10" = Table.TransformColumnTypes(#"Renamed Columns9",{{"Amount Invested (GHS)", Int64.Type}, {"Accrued Interest (since purchase) / Coupons (since last payment date)", Int64.Type}}),
    #"Reordered Columns4" = Table.ReorderColumns(#"Changed Type10",{"Scheme", "Txn Id", "Description", "Principal", "Purchase Cost", "Interst Rate", "Fund Manager", "CONSIDERATION", "ACC", "EntityName", "Entity_ID", "Investment ID", "Instrument", "Issuer Name", "Asset Tenure", "Date of Investment", "Amount Invested (GHS)", "Accrued Interest (since purchase) / Coupons (since last payment date)", "Maturity Date", "Face Value(GHS)", "Interest Rate percent", "Discount Rate percent", "Coupon Rate percent", "Issue Date", "Price Per Unit / Share at Purchase", "Price Per Unit / Share at Value Date", "Capital Gains", "Number of Units / Shares", "Currency Conversion Rate", "Currency", "Amount Invested in Foreign Currency (Eurobond / External Investment)", "Market Value (GHS)", "Asset Class", "ID", "Active Securities.Issue Date"}),
    #"Reporting Date" = Table.AddColumn(#"Reordered Columns4", "Reporting Date", each Date.FromText("31/08/2023")),
    #"Changed Type12" = Table.TransformColumnTypes(#"Reporting Date",{{"Reporting Date", type date}}),
    #"Remaining Days to Maturity" = Table.AddColumn(#"Changed Type12", "Remaining Days to Maturity", each if [Asset Class] <> "Collective Investment" or [Asset Class] <> "Equities" then ([Maturity Date] - [Reporting Date] - Duration.From(1)) else null),
    #"Changed Type13" = Table.TransformColumnTypes(#"Remaining Days to Maturity",{{"Remaining Days to Maturity", Int64.Type}}),
    #"Outstanding Interest to Maturity" = Table.AddColumn(#"Changed Type13", "Outstanding Interest to Maturity", each if [Asset Class] = "Fixed Deposit" then [ACC] else if [Asset Class] = "Treasury Bills" then [ACC] else if [Asset Class] = "Local Govt. & Statutory Agency Securities" and [Instrument] = "COCOA BILL -%" then [ACC] else if [Asset Class] = "Local Govt. & Statutory Agency Securities" and [Instrument] = "STATUTORY AGENCY BOND -%" then ([Remaining Days to Maturity]/[Active Securities.Day Count] * ([Coupon Rate percent]/100) * [Principal]) else if [Asset Class] = "Government Notes & Bonds" or [Asset Class] = "Corporate Notes & Bonds" then ([Remaining Days to Maturity]/[Active Securities.Day Count] * ([Coupon Rate percent]/100) * [Principal]) else null),
    #"Days Run" = Table.AddColumn(#"Outstanding Interest to Maturity", "Days Run", each if [Asset Class] <> "Collective Investment" or [Asset Class] <> "Equities" then ([Reporting Date] - [Issue Date])else null),
    #"Changed Type14" = Table.TransformColumnTypes(#"Days Run",{{"Days Run", Int64.Type}}),
    #"Reordered Columns" = Table.ReorderColumns(#"Changed Type14",{"Scheme", "Txn Id", "Description", "Principal", "Purchase Cost", "Interst Rate", "Fund Manager", "CONSIDERATION", "ACC", "ISSUER", "Active Securities.Issue Date", "ID", "Active Securities.Day Count", "EntityName", "Entity_ID", "Investment ID", "Instrument", "Issuer Name", "Asset Tenure", "Date of Investment", "Reporting Date", "Amount Invested (GHS)", "Accrued Interest (since purchase) / Coupons (since last payment date)", "Outstanding Interest to Maturity", "Maturity Date", "Face Value(GHS)", "Interest Rate percent", "Discount Rate percent", "Coupon Rate percent", "Issue Date", "Price Per Unit / Share at Purchase", "Price Per Unit / Share at Value Date", "Capital Gains", "Number of Units / Shares", "Days Run", "Currency Conversion Rate", "Currency", "Amount Invested in Foreign Currency (Eurobond / External Investment)", "Asset Class", "Market Value (GHS)", "Remaining Days to Maturity"}),
    #"Price Per Unit / Share at Last Date" = Table.DuplicateColumn(#"Reordered Columns", "Price Per Unit / Share at Value Date", "Price Per Unit / Share at Value Date - Copy"),
    #"Renamed Columns2" = Table.RenameColumns(#"Price Per Unit / Share at Last Date",{{"Price Per Unit / Share at Value Date - Copy", "Price Per Unit / Share at Last Date"}}),
    #"Reordered Columns5" = Table.ReorderColumns(#"Renamed Columns2",{"Scheme", "Txn Id", "Description", "Principal", "Purchase Cost", "Interst Rate", "Fund Manager", "CONSIDERATION", "ACC", "ISSUER", "Active Securities.Issue Date", "ID", "Active Securities.Day Count", "EntityName", "Entity_ID", "Investment ID", "Instrument", "Issuer Name", "Asset Tenure", "Date of Investment", "Reporting Date", "Amount Invested (GHS)", "Accrued Interest (since purchase) / Coupons (since last payment date)", "Outstanding Interest to Maturity", "Maturity Date", "Face Value(GHS)", "Interest Rate percent", "Discount Rate percent", "Coupon Rate percent", "Issue Date", "Price Per Unit / Share at Purchase", "Price Per Unit / Share at Value Date", "Capital Gains", "Number of Units / Shares", "Days Run", "Currency Conversion Rate", "Currency", "Amount Invested in Foreign Currency (Eurobond / External Investment)", "Asset Class", "Price Per Unit / Share at Last Date", "Market Value (GHS)", "Remaining Days to Maturity"}),
    #"Days in the Month" = Table.AddColumn(#"Reordered Columns5", "Days in the Month", each Date.DaysInMonth([Reporting Date])),
    #"Coupon for the month Calculator Column" = Table.AddColumn(#"Days in the Month", "Accrued Interest / Coupon for the month", each if [Asset Class] = "Corporate Notes & Bonds" or [Asset Class] = "Government Notes & Bonds" or [Asset Class] = "EuroBonds" or  [Asset Class] = "Local Govt. & Statutory Agency Securities" and [Instrument] = "STATUTORY AGENCY BOND -%" then ( [Days in the Month] / [Active Securities.Day Count] *  ([Coupon Rate percent]/100) * [Principal] ) else if [Asset Class] = "Fixed Deposit" and [Days in the Month] >= [Asset Tenure] then [ACC] else if [Asset Class] = "Fixed Deposit" and [Days in the Month] < [Asset Tenure] then ([Days in the Month]/365 * [Interest Rate percent]/100 *[Principal]) else null),
    #"Changed Type15" = Table.TransformColumnTypes(#"Coupon for the month Calculator Column",{{"Days in the Month", Int64.Type}}),
    #"Renamed Columns4" = Table.RenameColumns(#"Changed Type15",{{"Accrued Interest / Coupon for the month", "Coupon for the month Calculator Column"}}),
    #"Accrued Interest / Coupon for the month" = Table.AddColumn(#"Renamed Columns4", "Accrued Interest / Coupon for the month", each if [#"Accrued Interest (since purchase) / Coupons (since last payment date)"] < [Coupon for the month Calculator Column] then [#"Accrued Interest (since purchase) / Coupons (since last payment date)"] else [Coupon for the month Calculator Column]),
    #"Replaced Errors1" = Table.ReplaceErrorValues(#"Accrued Interest / Coupon for the month", {{"Accrued Interest / Coupon for the month", 0}}),
    #"Reordered Columns6" = Table.ReorderColumns(#"Replaced Errors1",{"Scheme", "Txn Id", "Description", "Principal", "Purchase Cost", "Interst Rate", "Fund Manager", "CONSIDERATION", "ACC", "ISSUER", "SEPERATOR", "Active Securities.Issue Date", "ID", "Coupon for the month Calculator Column", "Active Securities.Day Count", "EntityName", "Entity_ID", "Investment ID", "Instrument", "Issuer Name", "Asset Tenure", "Date of Investment", "Reporting Date", "Amount Invested (GHS)", "Accrued Interest / Coupon for the month", "Accrued Interest (since purchase) / Coupons (since last payment date)", "Outstanding Interest to Maturity", "Maturity Date", "Face Value(GHS)", "Interest Rate percent", "Discount Rate percent", "Coupon Rate percent", "Issue Date", "Price Per Unit / Share at Purchase", "Price Per Unit / Share at Value Date", "Capital Gains", "Number of Units / Shares", "Days Run", "Currency Conversion Rate", "Currency", "Amount Invested in Foreign Currency (Eurobond / External Investment)", "Asset Class", "Price Per Unit / Share at Last Date", "Market Value (GHS)", "Remaining Days to Maturity", "Days in the Month"}),
    #"Changed Type16" = Table.TransformColumnTypes(#"Reordered Columns6",{{"Coupon for the month Calculator Column", Int64.Type}, {"Accrued Interest / Coupon for the month", type number}})
in
    #"Changed Type16"



NEW*****
** CHANGES MADE TO ACCRUALS AFTER INTRO OF NEW INT ONLY SECURITIES IN DDEP******

let
    Source = Folder.Files("C:\Desktop\schemes"),
    #"Filtered Hidden Files1" = Table.SelectRows(Source, each [Attributes]?[Hidden]? <> true),
    #"Invoke Custom Function1" = Table.AddColumn(#"Filtered Hidden Files1", "Transform File", each #"Transform File"([Content])),
    #"Renamed Columns1" = Table.RenameColumns(#"Invoke Custom Function1", {"Name", "Source.Name"}),
    #"Removed Other Columns1" = Table.SelectColumns(#"Renamed Columns1", {"Source.Name", "Transform File"}),
    #"Expanded Table Column1" = Table.ExpandTableColumn(#"Removed Other Columns1", "Transform File", Table.ColumnNames(#"Transform File"(#"Sample File"))),
    #"Changed Type" = Table.TransformColumnTypes(#"Expanded Table Column1",{{"Source.Name", type text}, {"Txn Id", type text}, {"Description", type text}, {"Principal", type number}, {"Purchase Cost", type number}, {"Interst Rate", type number}, {"Settlement Date", type date}, {"Fund Manager", Int64.Type}, {"ACC", type number}, {"Market Value", type number}, {"SEPERATOR", type text}, {"CONSIDERATION", type number}, {"Sec Price", type number}, {"GAIN", Int64.Type}, {"MAT.DATE", type text}, {"Accrue.Amt", type number}, {"BUY.SELL", type text}, {"ISSUER", type any}, {"COUNTT", Int64.Type}}),
    #"BONDS Tweak" = Table.AddColumn(#"Changed Type", "Separator", each if [SEPERATOR] = "BONDS" then "Government Notes & Bonds" else [SEPERATOR]),
    #"Split Column by Delimiter" = Table.SplitColumn(#"BONDS Tweak", "Source.Name", Splitter.SplitTextByEachDelimiter({"-"}, QuoteStyle.Csv, true), {"Source.Name.1", "Source.Name.2"}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Split Column by Delimiter",{{"Source.Name.1", type text}, {"Source.Name.2", type text}}),
    #"Removed Columns" = Table.RemoveColumns(#"Changed Type1",{"Source.Name.2"}),
    #"Renamed Columns" = Table.RenameColumns(#"Removed Columns",{{"Source.Name.1", "Scheme"}}),
    #"Replaced Value" = Table.ReplaceValue(#"Renamed Columns","PATF","PENSIONS ALLIANCE TRUST FUND",Replacer.ReplaceText,{"Scheme"}),
    #"Inserted Date" = Table.AddColumn(#"Replaced Value", "Date", each Date.From(Text.From([GAIN], "en-GB")), type date),
    #"Renamed Columns3" = Table.RenameColumns(#"Inserted Date",{{"Date", "Maturity Date"}, {"Accrue.Amt", "Accrued Interest (since purchase) / Coupons (since last payment date)"}}),
    #"Filtered Rows" = Table.SelectRows(#"Renamed Columns3", each true),
    #"Removed Columns1" = Table.RemoveColumns(#"Filtered Rows",{"COUNTT"}),
    #"Asset Class" = Table.RenameColumns(#"Removed Columns1",{{"Separator", "Asset Class"}}),
    #"Filtering Cash and Receivables" = Table.SelectRows(#"Asset Class", each [Asset Class] <> "CASH" and [Asset Class] <> "RECIEVABLES"),
    #"Asset Tenure" = Table.AddColumn(#"Filtering Cash and Receivables", "Asset Tenure", each Duration.Days([Maturity Date] - [Settlement Date])),
    #"Changed Type3" = Table.TransformColumnTypes(#"Asset Tenure",{{"Asset Tenure", Int64.Type}}),
    #"Split Column by Delimiter1" = Table.SplitColumn(#"Changed Type3", "MAT.DATE", Splitter.SplitTextByDelimiter("'", QuoteStyle.Csv), {"MAT.DATE.1", "MAT.DATE.2", "MAT.DATE.3"}),
    #"Changed Type4" = Table.TransformColumnTypes(#"Split Column by Delimiter1",{{"MAT.DATE.1", type number}, {"MAT.DATE.2", type number}, {"MAT.DATE.3", type text}}),
    #"Merged Columns1" = Table.CombineColumns(Table.TransformColumnTypes(#"Changed Type4", {{"MAT.DATE.1", type text}, {"MAT.DATE.2", type text}}, "en-GB"),{"MAT.DATE.1", "MAT.DATE.2", "MAT.DATE.3"},Combiner.CombineTextByDelimiter("", QuoteStyle.None),"Capital Gains"),
    #"Changed Type5" = Table.TransformColumnTypes(#"Merged Columns1",{{"Capital Gains", type number}}),
    #"Replaced Value1" = Table.ReplaceValue(#"Changed Type5","Stocks","Equities",Replacer.ReplaceText,{"Asset Class"}),
    #"Number of Units / Shares" = Table.AddColumn(#"Replaced Value1", "Number of Units / Shares", each if [Asset Class] = "Equities" then [Principal] else null),
    #"Price Per Unit / Share at Purchase" = Table.AddColumn(#"Number of Units / Shares", "Price Per Unit / Share at Purchase", each if [Asset Class] = "Equities" then [Purchase Cost] else null),
    #"Changed Type6" = Table.TransformColumnTypes(#"Price Per Unit / Share at Purchase",{{"Price Per Unit / Share at Purchase", type number}}),
    #"Price Per Unit / Share at Value Date" = Table.RenameColumns(#"Changed Type6",{{"Sec Price", "Price Per Unit / Share at Value Date"}}),
    #"Face Value(GHS)" = Table.AddColumn(#"Price Per Unit / Share at Value Date", "Face Value(GHS)", each if [Asset Class] = "Government Notes & Bonds" then [Principal] else if [Asset Class] = "Local Govt. & Statutory Agency Securities" then [Principal] else if [Asset Class] = "Treasury Bills" then [Principal] else if [Asset Class] = "Corporate Notes & Bonds" then [Principal] else if [Asset Class] = "Fixed Deposit" then [Principal] else null),
    #"Currency" = Table.AddColumn(#"Face Value(GHS)", "Currency", each if Text.Contains([Description], "EUROBOND") then "USD" else if Text.Contains([Description], "VC FUND") then "USD" else if Text.Contains([Description], "PAYINC") then "USD" else if Text.Contains([Description], "IC AFRICA FIXED INCOME FUND ") then "USD" else "GHS"),
    #"Removed Columns2" = Table.RemoveColumns(#"Currency",{"BUY.SELL"}),
    #"Instrument" = Table.AddColumn(#"Removed Columns2", "Instrument", each if Text.Contains([Description], "TREASURY BOND") then "TREASURY BONDS - %" else if [Asset Class] = "Treasury Bills" then "TREASURY BILLS -%" else if Text.Contains([Description], "ESLA BOND") then "STATUTORY AGENCY BOND -%" else if Text.Contains([Description], "TREASURY NOTE") then "TREASURY NOTES - %" else if Text.Contains([Description], "COCOA BILL") then "COCOA BILL -%" else if [Asset Class] = "Corporate Notes & Bonds" then "CORPORATE BONDS -% " else if Text.Contains([Description], "FIXED DEPOSIT WITHABSA Bank Gh Ltd") then "NEGOTIABLE CERTIFICATES OF DEPOSITS -%" else if Text.Contains([Description], "FIXED DEPOSIT WITHFidelity Bank Ghana Ltd") then "NEGOTIABLE CERTIFICATES OF DEPOSITS -%" else if [Asset Class] = "Fixed Deposit" then "FIXED DEPOSIT -%" else if [Description] = "GLD" then "EXCHANGE TRADED FUND -%" else if [Asset Class] = "Equities" then "ORDINARY SHARES -%" else if Text.Contains([Description], "REIT") then "REAL ESTATE INVESTMENT TRUSTS (REITS) -%" else if Text.Contains([Description], "VC FUND") then "PRIVATE EQUITY FUNDS -%" else if [Asset Class] = "Collective Investment" then "MUTUAL FUND -%" else if Text.Contains([Description], "PAYINC PREF SHARES") then "REDEEMABLE CUMMULATIVE PREFERENCE SHARES -%" else if Text.Contains([Description], "YEAR EUROBOND") then "TREASURY BONDS - %" else if Text.Contains([Description], "PEP SPORTS") then "CORPORATE BONDS -%" else if Text.Contains([Description], "COCOA BOND") then "COCOA BONDS-%" else if [Asset Class] = "Interest Only Bonds" then "TREASURY BONDS - %" else null),
    #"Issuer Name" = Table.AddColumn(Instrument, "Issuer Name", each if Text.Contains([Description], "ESLA") then "ESLA" else if Text.Contains([Description], "COCOA") then "CMB" else if Text.Contains([Description], "TREASURY") then "GOG" else if [Asset Class] = "Equities" then [Description] else if [Asset Class] = "Collective Investment" then [Description] else if Text.Contains([Description], "QTL") then "QTL" else if Text.Contains([Description], "DAAKYE") then "DTP" else if Text.Contains([Description], "BAYPORT") then "BFS" else if Text.Contains([Description], "IZWE") then "ILL" else if Text.Contains([Description], "AFB") then "AFB" else if Text.Contains([Description], "PAYINC") then "PAYINC" else if Text.Contains([Description], "TECNOMONT") then "TECNOMONT" else if Text.Contains([Description], "PEP SPORTS") then "PEP SPORTS" else if Text.Contains([Description], "EUROBOND") then "GOG" else if Text.Contains([Description], "GOG") then "GOG" else if [Asset Class] = "Fixed Deposit" then [ISSUER] else null),
    #"Amount Invested (GHS)" = Table.AddColumn(#"Issuer Name", "Amount Invested (GHS)", each if [Asset Class] = "Fixed Deposit" then [Principal] else if [Currency] = "GHS" then [CONSIDERATION] else null),
    #"Interest Rate percent" = Table.AddColumn(#"Amount Invested (GHS)", "Interest Rate percent", each if [Asset Class] = "Fixed Deposit" then [Interst Rate] else null),
    #"Changed Type7" = Table.TransformColumnTypes(#"Interest Rate percent",{{"Interest Rate percent", type number}}),
    #"Discount Rate percent" = Table.AddColumn(#"Changed Type7", "Discount Rate percent", each if Text.Contains([Description], "BILL") then [Interst Rate] else null),
    #"Coupon Rate percent" = Table.AddColumn(#"Discount Rate percent", "Coupon Rate percent", each if Text.Contains([Description], "BOND") then [Interst Rate] else if Text.Contains([Description], "NOTE") then [Interst Rate] else null),
    #"Amount Invested in Foreign Currency (Eurobond / External Investment)" = Table.AddColumn(#"Coupon Rate percent" , "Amount Invested in Foreign Currency (Eurobond / External Investment)", each if [Currency] = "USD" then [CONSIDERATION] else null),
    #"Changed Type8" = Table.TransformColumnTypes(#"Amount Invested in Foreign Currency (Eurobond / External Investment)",{{"Amount Invested in Foreign Currency (Eurobond / External Investment)", Currency.Type}}),
    #"Issue Date" = Table.AddColumn(#"Changed Type8", "Issue Date", each Date.AddDays([Maturity Date],-[Asset Tenure])),
    #"Replaced Errors" = Table.ReplaceErrorValues(#"Issue Date", {{"Issue Date", null}}),
    #"Changed Type2" = Table.TransformColumnTypes(#"Replaced Errors",{{"Issue Date", type date}}),
    #"Renamed Columns6" = Table.RenameColumns(#"Changed Type2",{{"Market Value", "Market Value (GHS)"}}),
    #"Changed Type9" = Table.TransformColumnTypes(#"Renamed Columns6",{{"Market Value (GHS)", Currency.Type}}),
    #"Duplicated Column" = Table.DuplicateColumn(#"Changed Type9", "Issuer Name", "Issuer Name - Copy"),
    #"Duplicated Column1" = Table.DuplicateColumn(#"Duplicated Column", "Asset Tenure", "Asset Tenure - Copy"),
    #"Merged Columns2" = Table.CombineColumns(Table.TransformColumnTypes(#"Duplicated Column1", {{"GAIN", type text}, {"Asset Tenure - Copy", type text}}, "en-GB"),{"GAIN", "Issuer Name - Copy", "Asset Tenure - Copy"},Combiner.CombineTextByDelimiter("", QuoteStyle.None),"ID"),
    #"Merged Queries" = Table.NestedJoin(#"Merged Columns2", {"ID"}, #"Active Securities", {"ID"}, "Active Securities", JoinKind.LeftOuter),
    #"Expanded Active Securities" = Table.ExpandTableColumn(#"Merged Queries", "Active Securities", {"Day Count", "I S I N", "Issue Date"}, {"Active Securities.Day Count", "Active Securities.I S I N", "Active Securities.Issue Date"}),
    #"Changed Type11" = Table.TransformColumnTypes(#"Expanded Active Securities",{{"Active Securities.Day Count", Int64.Type}}),
    #"Renamed Columns7" = Table.RenameColumns(#"Changed Type11",{{"Active Securities.I S I N", "Investment ID"}}),
    #"Reordered Columns1" = Table.ReorderColumns(#"Renamed Columns7",{"Scheme", "Txn Id", "Description", "Principal", "Purchase Cost", "Interst Rate", "Settlement Date", "Fund Manager", "ACC", "Market Value (GHS)", "Asset Class", "CONSIDERATION", "Price Per Unit / Share at Value Date", "Capital Gains", "Accrued Interest (since purchase) / Coupons (since last payment date)", "Maturity Date", "Asset Tenure", "Number of Units / Shares", "Price Per Unit / Share at Purchase", "Face Value(GHS)", "Currency", "Instrument", "Issuer Name", "Amount Invested (GHS)", "Interest Rate percent", "Discount Rate percent", "Coupon Rate percent", "Amount Invested in Foreign Currency (Eurobond / External Investment)", "Issue Date", "Investment ID", "ID", "Active Securities.Issue Date"}),
    #"Currency Conversion Rate" = Table.AddColumn(#"Reordered Columns1", "Currency Conversion Rate", each if [Currency] = "USD"  and [Asset Class] = "Corporate Notes & Bonds" or [Asset Class]= "EuroBonds" then [#"Market Value (GHS)"] / ([Principal] + [ACC]) else if [Currency] = "USD" and [Asset Class] = "Collective Investment" then [#"Market Value (GHS)"] / ([Principal] * [#"Price Per Unit / Share at Value Date"]) 
else null),
    #"Scheme Name" = Table.AddColumn(#"Currency Conversion Rate", "Joiner", each if [Scheme] = "AXIS PENSION.csv" then "AXIS PENSION PLAN" else if [Scheme] = "BEST.csv" then "BEST PROVIDENT FUND SCHEME" else if [Scheme] = "BROADVIEW.csv" then "BROADVIEW MASTER TRUST FUND" else if [Scheme] = "CEDAR PENSION.csv" then "CEDAR PENSION SCHEME" else if [Scheme] = "CEDAR PROVIDENT.csv" then "CEDAR PROVIDENT FUND" else if [Scheme] = "DAAKYE.csv" then "DAAKYE OCCUPATIONAL PENSION SCHEME" else if [Scheme] = "ENIDASO.csv" then "PENSIONS ALLIANCE ENIDASO SCHEME" else if [Scheme] = "FGR BOGOSO.csv" then "FGR BOGOSO PRESTEA OCCUPATIONAL PENSION SCHEME" else if [Scheme] = "FIESTA.csv" then "FIESTA ROYALE  OCCUPATIONAL PENSION SCHEME" else if [Scheme] = "GIMPA.csv" then "GIMPA OCCUPATIONAL PENSION SCHEME" else if [Scheme] = "GNAT.csv" then "GNAT PROVIDENT FUND SCHEME" else if [Scheme] = "GOLDEN STAR WASSA.csv" then "GOLDEN STAR (WASSA) OCCUPATIONAL PENSION SCHEME" else if [Scheme] = "KIMPTON.csv" then "KIMPTON MASTER PROVIDENT FUND SCHEME" else if [Scheme] = "LARP.csv" then "LIVE AFTER RETIREMENT" else if [Scheme] = "MERIT OPS.csv" then "FIRST MERIT OCCUPATIONAL PENSION SCHEME" else if [Scheme] = "MERIT PPS.csv" then "FIRST MERIT PERSONAL PENSION SCHEME" else if [Scheme] = "PENTRUST.csv" then "PENTRUST TIER 2 OCCUPATIONAL MASTER TRUST SCHEME" else if [Scheme] = "QFTL.csv" then "QFTL PROVIDENT FUND SCHEME" else if [Scheme] = "RBG.csv" then "REPUBLIC MASTER TRUST PROVIDENT PENSION SCHEME" else if [Scheme] = "UPMT.csv" then "UNIVERSAL PENSIONS MASTER TRUST SCHEME" else if [Scheme] = "UPT PENSION.csv" then "UPT PENSION SCHEME" else if [Scheme] = "PENSIONS ALLIANCE TRUST FUND" then "PENSIONS ALLIANCE TRUST FUND" else null),
    #"Merged Queries1" = Table.NestedJoin(#"Scheme Name", {"Joiner"}, zenith_schemes, {"EntityName"}, "zenith_schemes", JoinKind.LeftOuter),
    #"Expanded zenith_schemes" = Table.ExpandTableColumn(#"Merged Queries1", "zenith_schemes", {"Entity_ID"}, {"zenith_schemes.Entity_ID"}),
    #"Reordered Columns2" = Table.ReorderColumns(#"Expanded zenith_schemes",{"Scheme", "Txn Id", "Description", "Principal", "Purchase Cost", "Interst Rate", "Settlement Date", "Fund Manager", "CONSIDERATION", "ACC", "Investment ID", "Instrument", "Issuer Name", "Asset Tenure", "Amount Invested (GHS)", "Accrued Interest (since purchase) / Coupons (since last payment date)", "Face Value(GHS)", "Interest Rate percent", "Discount Rate percent", "Coupon Rate percent", "Issue Date", "Price Per Unit / Share at Purchase", "Price Per Unit / Share at Value Date", "Capital Gains", "Number of Units / Shares", "Currency Conversion Rate", "Currency", "Amount Invested in Foreign Currency (Eurobond / External Investment)", "Market Value (GHS)", "Asset Class", "Maturity Date", "ID", "Active Securities.Issue Date", "Joiner", "zenith_schemes.Entity_ID"}),
    #"Renamed Columns8" = Table.RenameColumns(#"Reordered Columns2",{{"zenith_schemes.Entity_ID", "Entity_ID"}, {"Joiner", "EntityName"}}),
    #"Reordered Columns3" = Table.ReorderColumns(#"Renamed Columns8",{"Scheme", "Txn Id", "Description", "Principal", "Purchase Cost", "Interst Rate", "Fund Manager", "CONSIDERATION", "ACC", "EntityName", "Entity_ID", "Investment ID", "Instrument", "Issuer Name", "Asset Tenure", "Settlement Date", "Amount Invested (GHS)", "Accrued Interest (since purchase) / Coupons (since last payment date)", "Face Value(GHS)", "Interest Rate percent", "Discount Rate percent", "Coupon Rate percent", "Issue Date", "Price Per Unit / Share at Purchase", "Price Per Unit / Share at Value Date", "Capital Gains", "Number of Units / Shares", "Currency Conversion Rate", "Currency", "Amount Invested in Foreign Currency (Eurobond / External Investment)", "Market Value (GHS)", "Asset Class", "Maturity Date", "ID", "Active Securities.Issue Date"}),
    #"Renamed Columns9" = Table.RenameColumns(#"Reordered Columns3",{{"Settlement Date", "Date of Investment"}}),
    #"Changed Type10" = Table.TransformColumnTypes(#"Renamed Columns9",{{"Amount Invested (GHS)", Int64.Type}, {"Accrued Interest (since purchase) / Coupons (since last payment date)", Int64.Type}}),
    #"Reordered Columns4" = Table.ReorderColumns(#"Changed Type10",{"Scheme", "Txn Id", "Description", "Principal", "Purchase Cost", "Interst Rate", "Fund Manager", "CONSIDERATION", "ACC", "EntityName", "Entity_ID", "Investment ID", "Instrument", "Issuer Name", "Asset Tenure", "Date of Investment", "Amount Invested (GHS)", "Accrued Interest (since purchase) / Coupons (since last payment date)", "Maturity Date", "Face Value(GHS)", "Interest Rate percent", "Discount Rate percent", "Coupon Rate percent", "Issue Date", "Price Per Unit / Share at Purchase", "Price Per Unit / Share at Value Date", "Capital Gains", "Number of Units / Shares", "Currency Conversion Rate", "Currency", "Amount Invested in Foreign Currency (Eurobond / External Investment)", "Market Value (GHS)", "Asset Class", "ID", "Active Securities.Issue Date"}),
    #"Reporting Date" = Table.AddColumn(#"Reordered Columns4", "Reporting Date", each Date.FromText("30/09/2023")),
    #"Changed Type12" = Table.TransformColumnTypes(#"Reporting Date",{{"Reporting Date", type date}}),
    #"Remaining Days to Maturity" = Table.AddColumn(#"Changed Type12", "Remaining Days to Maturity", each if [Asset Class] <> "Collective Investment" or [Asset Class] <> "Equities" then ([Maturity Date] - [Reporting Date] - Duration.From(1)) else null),
    #"Changed Type13" = Table.TransformColumnTypes(#"Remaining Days to Maturity",{{"Remaining Days to Maturity", Int64.Type}}),
    #"Outstanding Interest to Maturity" = Table.AddColumn(#"Changed Type13", "Outstanding Interest to Maturity", each if [Asset Class] = "Fixed Deposit" then [ACC] else if [Asset Class] = "Treasury Bills" then [ACC] else if [Asset Class] = "Local Govt. & Statutory Agency Securities" and [Instrument] = "COCOA BILL -%" then [ACC] else if [Asset Class] = "Local Govt. & Statutory Agency Securities" and [Instrument] = "STATUTORY AGENCY BOND -%" then ([Remaining Days to Maturity]/[Active Securities.Day Count] * ([Coupon Rate percent]/100) * [Principal]) else if [Asset Class] = "Government Notes & Bonds" or [Asset Class] = "Corporate Notes & Bonds" then ([Remaining Days to Maturity]/[Active Securities.Day Count] * ([Coupon Rate percent]/100) * [Principal]) else if [Asset Class] = "Local Govt. & Statutory Agency Securities" and [Instrument] = "COCOA BONDS-%" then ([Remaining Days to Maturity]/[Active Securities.Day Count] * ([Coupon Rate percent]/100) * [Principal]) else if [Asset Class] = "Interest Only Bonds" then ([Remaining Days to Maturity]/[Active Securities.Day Count] * ([Coupon Rate percent]/100) * [Principal]) else null),
    #"Days Run" = Table.AddColumn(#"Outstanding Interest to Maturity", "Days Run", each if [Asset Class] <> "Collective Investment" or [Asset Class] <> "Equities" then ([Reporting Date] - [Issue Date])else null),
    #"Changed Type14" = Table.TransformColumnTypes(#"Days Run",{{"Days Run", Int64.Type}}),
    #"Reordered Columns" = Table.ReorderColumns(#"Changed Type14",{"Scheme", "Txn Id", "Description", "Principal", "Purchase Cost", "Interst Rate", "Fund Manager", "CONSIDERATION", "ACC", "ISSUER", "Active Securities.Issue Date", "ID", "Active Securities.Day Count", "EntityName", "Entity_ID", "Investment ID", "Instrument", "Issuer Name", "Asset Tenure", "Date of Investment", "Reporting Date", "Amount Invested (GHS)", "Accrued Interest (since purchase) / Coupons (since last payment date)", "Outstanding Interest to Maturity", "Maturity Date", "Face Value(GHS)", "Interest Rate percent", "Discount Rate percent", "Coupon Rate percent", "Issue Date", "Price Per Unit / Share at Purchase", "Price Per Unit / Share at Value Date", "Capital Gains", "Number of Units / Shares", "Days Run", "Currency Conversion Rate", "Currency", "Amount Invested in Foreign Currency (Eurobond / External Investment)", "Asset Class", "Market Value (GHS)", "Remaining Days to Maturity"}),
    #"Price Per Unit / Share at Last Date" = Table.DuplicateColumn(#"Reordered Columns", "Price Per Unit / Share at Value Date", "Price Per Unit / Share at Value Date - Copy"),
    #"Renamed Columns2" = Table.RenameColumns(#"Price Per Unit / Share at Last Date",{{"Price Per Unit / Share at Value Date - Copy", "Price Per Unit / Share at Last Date"}}),
    #"Reordered Columns5" = Table.ReorderColumns(#"Renamed Columns2",{"Scheme", "Txn Id", "Description", "Principal", "Purchase Cost", "Interst Rate", "Fund Manager", "CONSIDERATION", "ACC", "ISSUER", "Active Securities.Issue Date", "ID", "Active Securities.Day Count", "EntityName", "Entity_ID", "Investment ID", "Instrument", "Issuer Name", "Asset Tenure", "Date of Investment", "Reporting Date", "Amount Invested (GHS)", "Accrued Interest (since purchase) / Coupons (since last payment date)", "Outstanding Interest to Maturity", "Maturity Date", "Face Value(GHS)", "Interest Rate percent", "Discount Rate percent", "Coupon Rate percent", "Issue Date", "Price Per Unit / Share at Purchase", "Price Per Unit / Share at Value Date", "Capital Gains", "Number of Units / Shares", "Days Run", "Currency Conversion Rate", "Currency", "Amount Invested in Foreign Currency (Eurobond / External Investment)", "Asset Class", "Price Per Unit / Share at Last Date", "Market Value (GHS)", "Remaining Days to Maturity"}),
    #"Days in the Month" = Table.AddColumn(#"Reordered Columns5", "Days in the Month", each Date.DaysInMonth([Reporting Date])),
    #"Coupon for the month Calculator Column" = Table.AddColumn(#"Days in the Month", "Accrued Interest / Coupon for the month", each if [Asset Class] = "Corporate Notes & Bonds" or [Asset Class] = "Government Notes & Bonds" or [Asset Class] = "EuroBonds" or [Asset Class] = "Interest Only Bonds" or [Asset Class] = "Local Govt. & Statutory Agency Securities" and [Instrument] = "STATUTORY AGENCY BOND -%"  or [Instrument] = "COCOA BONDS-%" then ( [Days in the Month] / [Active Securities.Day Count] *  ([Coupon Rate percent]/100) * [Principal] ) else if [Asset Class] = "Fixed Deposit" and [Days in the Month] >= [Asset Tenure] then [ACC] else if [Asset Class] = "Fixed Deposit" and [Days in the Month] < [Asset Tenure] then ([Days in the Month]/365 * [Interest Rate percent]/100 *[Principal]) else null),
    #"Changed Type15" = Table.TransformColumnTypes(#"Coupon for the month Calculator Column",{{"Days in the Month", Int64.Type}}),
    #"Renamed Columns4" = Table.RenameColumns(#"Changed Type15",{{"Accrued Interest / Coupon for the month", "Coupon for the month Calculator Column"}}),
    #"Accrued Interest / Coupon for the month" = Table.AddColumn(#"Renamed Columns4", "Accrued Interest / Coupon for the month", each if [#"Accrued Interest (since purchase) / Coupons (since last payment date)"] < [Coupon for the month Calculator Column] then [#"Accrued Interest (since purchase) / Coupons (since last payment date)"] else [Coupon for the month Calculator Column]),
    #"Replaced Errors1" = Table.ReplaceErrorValues(#"Accrued Interest / Coupon for the month", {{"Accrued Interest / Coupon for the month", 0}}),
    #"Reordered Columns6" = Table.ReorderColumns(#"Replaced Errors1",{"Scheme", "Txn Id", "Description", "Principal", "Purchase Cost", "Interst Rate", "Fund Manager", "CONSIDERATION", "ACC", "ISSUER", "SEPERATOR", "Active Securities.Issue Date", "ID", "Coupon for the month Calculator Column", "Active Securities.Day Count", "EntityName", "Entity_ID", "Investment ID", "Instrument", "Issuer Name", "Asset Tenure", "Date of Investment", "Reporting Date", "Amount Invested (GHS)", "Accrued Interest / Coupon for the month", "Accrued Interest (since purchase) / Coupons (since last payment date)", "Outstanding Interest to Maturity", "Maturity Date", "Face Value(GHS)", "Interest Rate percent", "Discount Rate percent", "Coupon Rate percent", "Issue Date", "Price Per Unit / Share at Purchase", "Price Per Unit / Share at Value Date", "Capital Gains", "Number of Units / Shares", "Days Run", "Currency Conversion Rate", "Currency", "Amount Invested in Foreign Currency (Eurobond / External Investment)", "Asset Class", "Price Per Unit / Share at Last Date", "Market Value (GHS)", "Remaining Days to Maturity", "Days in the Month"}),
    #"Changed Type16" = Table.TransformColumnTypes(#"Reordered Columns6",{{"Coupon for the month Calculator Column", Int64.Type}, {"Accrued Interest / Coupon for the month", type number}})
in
    #"Changed Type16"
